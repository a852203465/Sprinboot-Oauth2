<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.authorization.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.github.authorization.entity.UserInfo">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="state" jdbcType="TINYINT" javaType="java.lang.Byte"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, state
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.github.authorization.entity.UserInfo">
    insert into user_info (id, username, password, 
      state)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="com.github.authorization.entity.UserInfo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.authorization.entity.UserInfo">
        update user_info
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.authorization.entity.UserInfo">
        update user_info
            set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            state = #{state,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="findUserInfoByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info where username=#{username,jdbcType=VARCHAR}
    </select>


</mapper>